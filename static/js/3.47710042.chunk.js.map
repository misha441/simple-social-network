{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHook","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","className","s","profileImg","style","backgroundImage","descriptionBlock","photos","large","src","descriptionBlock__image","userIcon","descriptionBlock__fullName","fullName","aboutMe","Preloader","Post","item","postContent","postMessage","message","likes","MyPosts","React","memo","postElements","posts","map","p","likesCount","id","PostBlock","AddNewPostReduxForm","onSubmit","values","addPost","newPostBody","maxLength30","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","autorisedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.47710042.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImg\":\"Profile_profileImg__1Vz1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImg\":\"ProfileInfo_profileImg__33ZeW\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__PO2Fw\",\"descriptionBlock__image\":\"ProfileInfo_descriptionBlock__image__1D829\",\"descriptionBlock__fullName\":\"ProfileInfo_descriptionBlock__fullName__2UcQy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostBlock\":\"MyPosts_PostBlock__rCvhz\",\"newPostBody\":\"MyPosts_newPostBody__10C31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2k60P\",\"postContent\":\"Post_postContent__2gBwc\",\"postMessage\":\"Post_postMessage__2HJn3\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    let [editMode,setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '-------'}</span>\r\n                </div>\r\n                : <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userIcon from '../../../assets/photos/user_icon.png';\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile){\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.profileImg} style={{backgroundImage: \"url(https://images.squarespace-cdn.com/content/v1/559a80d5e4b04425d943147c/1439403579713-9SIXL2JDY0NUNCB91IKU/ke17ZwdGBToddI8pDm48kAiXG7UUCoVQylfgKB2t4HEUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYy7Mythp_T-mtop-vrsUOmeInPi9iDjx9w8K4ZfjXt2djEDszr4K-E8jpXoyz6AgMt_LkUJ7baHP8d9iPpYzpluH3bqxw7fF48mhrq5Ulr0Hg/banner.jpg?format=2500w)\"}}></div>\r\n            <div className={s.descriptionBlock}>\r\n                { !props.profile.photos.large ? <img src={userIcon} className={s.descriptionBlock__image}/>\r\n                : <img src={props.profile.photos.large} className={s.descriptionBlock__image}/>}\r\n                <div className={s.descriptionBlock__fullName}>{props.profile.fullName}</div>\r\n\r\n                <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus}/>\r\n                <br/>\r\n                <div>{props.profile.aboutMe}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.postContent}>\r\n                <img\r\n                    src='https://illustrators.ru/uploads/illustration/image/1232594/main_%D1%8B%D1%8B%D1%8B%D1%8B.png'/>\r\n                <div className={s.postMessage}>{props.message}</div>\r\n            </div>\r\n            <div>{props.likes} likes</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/formControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    }\r\n\r\n    let postElements = props.posts.map(p => <Post key={p.id} message={p.message} likes={p.likesCount}/>);\r\n\r\n\r\n    return (\r\n        <div className={s.PostBlock}>\r\n            <h3>My post</h3>\r\n\r\n            <AddNewPostReduxForm onSubmit={addPost}/>\r\n\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newPostBody'} component={Textarea} placeholder={'Enter new post'}\r\n                       validate={[required, maxLength30]} className={s.newPostBody}/>\r\n            </div>\r\n            <div>\r\n                <button>Button</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'profileAddNewPost'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText : state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch( addPostActionCreator(newPostBody) );\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {updateStatus} from \"../../redux/profileReducer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.autorisedUserId;\r\n            if(!userId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        autorisedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}