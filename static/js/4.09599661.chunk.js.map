{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","to","id","name","Message","massage","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","dialogs__textArea","validate","required","placeholder","dialogs__tsendButton","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItem","messeges","sendingField","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,kBAAoB,mCAAmC,qBAAuB,sCAAsC,UAAY,6B,2FCYxYC,EATI,SAACC,GAChB,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SACI,cAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAjC,SAAsCL,EAAMM,UCGzCC,EANC,SAACP,GACb,OACI,qBAAKC,UAAWC,IAAEM,QAAlB,SAA4BR,EAAMS,W,kCCgCpCC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdL,SAACb,GACpB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUb,KAAM,iBAAkBL,UAAWC,IAAEkB,kBAC1DC,SAAU,CAACC,IAASZ,GAAca,YAAa,wBAE1D,8BACI,wBAAQtB,UAAWC,IAAEsB,qBAArB,0BAQDC,EA/CC,SAACzB,GACb,IAAI0B,EAAQ1B,EAAM2B,YAMdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuBzB,KAAMyB,EAAEzB,KAAMD,GAAI0B,EAAE1B,IAA1B0B,EAAE1B,OAC5D2B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAoBzB,QAASyB,EAAEzB,SAAjByB,EAAE7B,OAG/D,OACI,sBAAKJ,UAAWC,IAAE2B,QAAlB,UACI,qBAAK5B,UAAWC,IAAEiC,YAAlB,SACKP,IAEL,sBAAK3B,UAAWC,IAAEkC,SAAlB,UACKJ,EACD,qBAAK/B,UAAWC,IAAEmC,aAAlB,SAEI,cAACzB,EAAD,CAAqBG,SAjBjB,SAACuB,GACjBtC,EAAMuC,YAAYD,EAAOE,4B,wBCSlBC,sBACXC,aAfkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACgB,GACtB,MAAO,CACHJ,YAAc,SAACC,GACXG,EAASC,YAAmBJ,SAOpCK,IAFWJ,CAGbhB","file":"static/js/4.09599661.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Yn5cF\",\"dialogsItem\":\"Dialogs_dialogsItem__2Ni81\",\"dialog\":\"Dialogs_dialog__1I3Fm\",\"active\":\"Dialogs_active__2ksa_\",\"massages\":\"Dialogs_massages__1lFmZ\",\"massage\":\"Dialogs_massage__2ehW0\",\"sendingField\":\"Dialogs_sendingField__1tOv8\",\"dialogs__textArea\":\"Dialogs_dialogs__textArea__34v4W\",\"dialogs__tsendButton\":\"Dialogs_dialogs__tsendButton__1vZq3\",\"followBtn\":\"Dialogs_followBtn__2u7H7\"};","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return(\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={s.massage}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/formControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let onSendMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messeges}>\r\n                {messagesElements}\r\n                <div className={s.sendingField}>\r\n\r\n                    <AddMessageReduxForm onSubmit={onSendMessage}/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'} className={s.dialogs__textArea}\r\n                       validate={[required,maxLength50]} placeholder={'Enter new message'}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.dialogs__tsendButton}>SEND</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage : (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}